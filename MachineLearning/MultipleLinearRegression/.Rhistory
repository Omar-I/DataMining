getwd()
setwd("/home/chris/Documents/itt/Enero_Junio_2020/Mineria_de_datos/DataMining/MachineLearning/MultipleLinearRegression
")
setwd("/home/chris/Documents/itt/Enero_Junio_2020/Mineria_de_datos/DataMining/MachineLearning/MultipleLinearRegression")
getwd()
# Importing the dataset
dataset <- read.csv('50_Startups.csv')
View(dataset)
# Transform the categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1,2,3))
dataset
View(dataset)
library(caTools)
set.seed(123)
split <- sample.split(dataset$Profit, SplitRatio = 0.8)
training_set <- subset(dataset, split == TRUE)
test_set <- subset(dataset, split == FALSE)
regressor = lm(formula = Profit ~ .,
data = training_set )
regressor(regressor)
summary(regressor)
# Prediction the Test set results
y_pred = predict(regressor, newdata = test_set)
y_pred
# Building the optimal model using Backward Elimination
regressor = lm(formula = Profit ~ + Administration + Marketing.Spend + State,
data = dataset )
summary(regressor)
regressor = lm(formula = Profit ~ + Administration + Marketing.Spend,
data = dataset )
summary(regressor)
regressor = lm(formula = Profit ~ + Administration + Marketing.Spend,
data = dataset )
summary(regressor)
# Building the optimal model using Backward Elimination
regressor = lm(formula = Profit ~ + Administration + Marketing.Spend + State,
data = dataset )
summary(regressor)
# Building the optimal model using Backward Elimination
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset )
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset )
summary(regressor)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset )
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset )
summary(regressor)
backwardElimination <- function(x, sl) {
numVars = length(x)
for (i in c(1:numVars)){
regressor = lm(formula = Profit ~ ., data = x)
maxVar = max(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"])
if (maxVar > sl){
j = which(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"] == maxVar)
x = x[, -j]
}
numVars = numVars - 1
}
return(summary(regressor))
}
SL = 0.05
training_set
backwardElimination(training_set, SL)
